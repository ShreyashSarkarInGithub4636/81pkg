#!/bin/bash

REPO="https://raw.githubusercontent.com/ShreyashSarkarInGithub4636/81pkg/refs/heads/main"
CACHE_DIR="/var/cache/pkg"
TMP_DIR="/tmp/pkg"
LOCK_FILE="/var/run/pkg.lock"
WORLD_FILE="/etc/pkg.world"
LOG_FILE="/var/log/pkg.log"

mkdir -p "$CACHE_DIR" "$TMP_DIR"
touch "$WORLD_FILE"

exec 200>$LOCK_FILE
flock -n 200 || { echo "Another instance is running!"; exit 1; }

function log_message() {
    echo "[$(date +'%Y-%m-%d %H:%M:%S')] $1" | tee -a "$LOG_FILE"
}

function print_help() {
    echo "Usage: pkg [OPTION] [PACKAGE]"
    echo "Options:"
    echo "  install           Install a package"
    echo "  uninstall         Remove a package"
    echo "  upgrade           Reinstall a package"
    echo "  audit             List installed packages"
    echo "  cache             Show cache information"
    echo "  help              Show this help message"
}

function error_handler() {
    log_message "Error occurred. Cleaning up..."
    rm -rf "$TMP_DIR/$PKG"
    [[ "$KEEP_CACHE" != "true" ]] && rm -f "$CACHE_DIR/$PKG.pkg"
    rm -f "$LOCK_FILE"
    exit 1
}

function install_package() {
    [[ -z "$PKG" ]] && { echo "Package name not specified."; exit 1; }

    ARCH=$(uname -m)
    PACKAGE_URL="$REPO/$ARCH/$PKG.pkg"
    CACHE_FILE="$CACHE_DIR/$PKG.pkg"
    INSTALL_DIR="/usr/local/pkg/$PKG"

    log_message "Installing package: $PKG for architecture: $ARCH"

    if [[ ! -f "$CACHE_FILE" ]]; then
        log_message "Fetching package from: $PACKAGE_URL"
        curl -L "$PACKAGE_URL" -o "$CACHE_FILE" --progress-bar || error_handler
    else
        log_message "Using cached package."
    fi

    mkdir -p "$TMP_DIR/$PKG"
    tar -xzf "$CACHE_FILE" -C "$TMP_DIR/$PKG" || error_handler

    if [[ -f "$TMP_DIR/$PKG/install" ]]; then
        log_message "Running installation script..."
        chmod +x "$TMP_DIR/$PKG/install"
        (cd "$TMP_DIR/$PKG" && ./install) || error_handler
    else
        log_message "No install script found. Copying files..."
        cp -r "$TMP_DIR/$PKG"/* /usr/ || error_handler
    fi

    echo "$PKG" >> "$WORLD_FILE"
    rm -rf "$TMP_DIR/$PKG"
    log_message "Installation of $PKG completed successfully."
}

function uninstall_package() {
    [[ -z "$PKG" ]] && { echo "Package name not specified."; exit 1; }

    if grep -q "^$PKG$" "$WORLD_FILE"; then
        log_message "Removing package: $PKG"
        sed -i "/^$PKG$/d" "$WORLD_FILE"

        UNINSTALL_SCRIPT="/etc/81pkg.d/$PKG/uninstall.sh"
        if [[ -f "$UNINSTALL_SCRIPT" ]]; then
            log_message "Executing uninstall script: $UNINSTALL_SCRIPT"
            chmod +x "$UNINSTALL_SCRIPT"
            "$UNINSTALL_SCRIPT"
        else
            log_message "No uninstall script found for $PKG. Skipping execution."
        fi

        log_message "Package $PKG removed successfully."
    else
        log_message "Package $PKG is not installed."
    fi
}

function audit_packages() {
    log_message "Installed packages:"
    cat "$WORLD_FILE"
}

function cache_info() {
    log_message "Cache directory: $CACHE_DIR"
    echo "Cached packages:"
    ls "$CACHE_DIR"
}

function main() {
    [[ -z "$1" ]] && { echo "No option provided. Use help for usage information."; exit 1; }

    case "$1" in
        install)
            KEEP_CACHE=false
            [[ "$3" == "keep" ]] && KEEP_CACHE=true
            PKG="$2"
            install_package
            ;;
        uninstall)
            PKG="$2"
            uninstall_package
            ;;
        upgrade)
            PKG="$2"
            uninstall_package
            install_package
            ;;
        audit)
            audit_packages
            ;;
        cache)
            cache_info
            ;;
        help)
            print_help
            ;;
        *)
            log_message "Invalid option. Use help for usage information."
            ;;
    esac

    rm -f "$LOCK_FILE"
}

main "$@"
